version: '3'

services:
#container for webservices
  web:
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - CELERY_TIMEZONE=Europe/Berlin
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - HOST_EMAIL=${HOST_EMAIL}
      - HOST_PASSWORD=${HOST_PASSWORD}
# message broker for celery tasks
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672"
      - "5672:5672"
#celery worker to evaluate files
  celery_eval:
    build: .
    command: celery -A PLT_WebApp.celery worker -Q eval --loglevel=info  -c 1
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
# celery worker to send emails
  celery_email:
    build: .
    command: celery -A PLT_WebApp.celery worker -Q email --loglevel=info -c 1
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
#celery worker to delete old user requests
  celery_delete:
    build: .
    command: celery -A PLT_WebApp.celery worker -Q delete --loglevel=info -c 1
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
      - celery_beat
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
#celery scheduler for celery_delete
  celery_beat:
    build: .
    command: celery -A PLT_WebApp.celery beat --loglevel=info 
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//



      